{"version":3,"sources":["Game.jsx","Login.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["API_URL","getUsers","request","Request","method","mode","headers","fetch","setRiddle","login","riddle","body","JSON","stringify","PlayerCard","isMe","index","useState","type","setType","newRiddle","setNewRiddle","changeRiddle","a","xs","className","placeholder","defaultValue","addon","onClick","onChange","e","target","value","Game","users","setUsers","useEffect","response","ok","json","fetchUsers","map","user","key","name","toLowerCase","fetchLogin","Login","setIsLogged","setLogin","log","sessionStorage","setItem","id","App","isLogged","getItem","console","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01178e09.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Card, CardTitle, Col, Container, Input, InputGroup, InputGroupText, Row } from 'reactstrap';\n\nconst API_URL = \"https://cloudy-bread.herokuapp.com\";\n\nfunction getUsers() {\n    const request = new Request(`${API_URL}/users`, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            'Access-Control-Allow-Origin': '*'\n        }\n    })\n\n    return fetch(request)\n}\n\nfunction setRiddle(login, riddle) {\n    const request = new Request(`${API_URL}/users`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n            \"name\": login,\n            \"riddle\": riddle\n        })\n    })\n\n    return fetch(request)\n}\n\nconst PlayerCard = ({ login, isMe, riddle, index }) => {\n    const [type, setType] = useState(\"password\");\n    const [newRiddle, setNewRiddle] = useState(\"\");\n\n    const toggleRiddle = () => {\n        if (type === \"password\") {\n            setType(\"text\")\n        } else {\n            setType(\"password\")\n        }\n    }\n\n    const changeRiddle = async () => {\n        await setRiddle(login, newRiddle);\n    }\n\n    return (\n        <Col xs='4' key={index}>\n            <Card className='px-3 py-3'>\n                <CardTitle>{login}</CardTitle>\n                {\n                    isMe &&\n                    <InputGroup>\n                        <Input placeholder=\"Riddle\" type={type} defaultValue={riddle} />\n                        <InputGroupText>\n                            <Input\n                                addon\n                                type=\"checkbox\"\n                                onClick={toggleRiddle}\n                            />\n                        </InputGroupText>\n                    </InputGroup>\n                }\n                {\n                    !isMe &&\n                    <InputGroup>\n                        <Input defaultValue={riddle} onChange={(e) => setNewRiddle(e.target.value)}/>\n                        <Button onClick={changeRiddle}>\n                            Change\n                        </Button>\n                    </InputGroup>\n                }\n            </Card>\n        </Col>\n    )\n}\n\nexport default function Game({ login }) {\n    const [users, setUsers] = useState([{ \"name\": \"test\", \"riddle\": \"est\" }]);\n\n    useEffect(() => {\n        async function fetchUsers() {\n            let response = await getUsers();\n\n            if (response.ok) {\n                let json = await response.json();\n                setUsers(json);\n            }\n        }\n\n        fetchUsers();\n    }, [])\n\n    return (\n        <Container className='lg mt-5' >\n            <Row className='d-flex justify-content-center'>\n                {\n                    users.map((user, key) => {\n                        const { name, riddle } = user;\n\n                        if (login === name.toLowerCase()) {\n                            return (\n                                <PlayerCard key={key} index={key} login={login} isMe={true} riddle={riddle} />\n                            )\n                        } else {\n                            return (\n                                <PlayerCard key={key} index={key} login={name} isMe={false} riddle={riddle} />\n                            )\n                        }\n                    })\n                }\n            </Row>\n        </Container>\n    )\n}\n","import React from 'react'\n\nconst API_URL = \"https://cloudy-bread.herokuapp.com\";\n\nfunction fetchLogin(login, riddle) {\n    const request = new Request(`${API_URL}/users`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n            \"name\": login,\n            \"riddle\": riddle\n        })\n    })\n\n    return fetch(request)\n}\n\nexport default function Login({ setIsLogged, setLogin, login}) {\n    const log = async () => {\n        if (login !== \"\") {\n            await fetchLogin(login, \"\");\n            setIsLogged(true);\n            setLogin(login);\n            sessionStorage.setItem('login', login);\n        }\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row d-flex justify-content-center\">\n                <div className=\"col-md-3\">\n                    <div className=\"card px-5 py-5\" id=\"form1\">\n                        <div className=\"form-data\">\n                            <div className=\"forms-inputs mb-3\"> <span>Username</span>\n                                <input type=\"text\" onChange={(e) => setLogin(e.target.value)}/>\n                            </div>\n                            <div className=\"mb-3\"> <button className=\"btn btn-dark w-100\" onClick={log}>Login</button> </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n","import './App.css';\nimport Game from './Game';\nimport Login from './Login';\nimport { useEffect, useState } from 'react';\n\nexport default function App() {\n\tconst [isLogged, setIsLogged] = useState(false);\n\tconst [login, setLogin] = useState();\n\n\tuseEffect(() => {\n\t\tlet user = sessionStorage.getItem('login');\n\t\tconsole.log(user);\n\t\tif (user != null) {\n\t\t\tsetLogin(user);\n\t\t\tsetIsLogged(true);\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\t!isLogged &&\n\t\t\t\t<Login setLogin={setLogin} setIsLogged={setIsLogged} login={login}/>\n\t\t\t}\n\t\t\t{\n\t\t\t\tisLogged &&\n\t\t\t\t<Game login={login} />\n\t\t\t}\n\t\t</div>\n\t)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}